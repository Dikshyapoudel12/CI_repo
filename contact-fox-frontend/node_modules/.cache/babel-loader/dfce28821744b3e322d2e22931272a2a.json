{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CI repo\\\\contact-fox-frontend\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\";\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Function to get all contacts for the user.\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Function to add a contact.\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Function to delete a contact.\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Function to update the current contact.\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Function to clear all contacts from the\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  // Function to set the current contact.\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  // Function the clear the current contact.\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  // Function to filter contacts (based on what is inputted in search field).\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  };\n\n  // Function to clear filter for contacts.\n  const clearFilter = text => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default ContactState;","map":{"version":3,"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","delete","updateContact","put","_id","clearContacts","setCurrent","clearCurrent","filterContacts","text","clearFilter","children"],"sources":["C:/Users/DELL/Desktop/CI repo/contact-fox-frontend/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from \"../types\";\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Function to get all contacts for the user.\n  const getContacts = async () => {\n    try {\n      const res = await axios.get(\"/api/contacts\");\n\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // Function to add a contact.\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // Function to delete a contact.\n  const deleteContact = async (id) => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // Function to update the current contact.\n  const updateContact = async (contact) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.put(\n        `/api/contacts/${contact._id}`,\n        contact,\n        config\n      );\n\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // Function to clear all contacts from the\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Function to set the current contact.\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Function the clear the current contact.\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Function to filter contacts (based on what is inputted in search field).\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Function to clear filter for contacts.\n  const clearFilter = (text) => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        getContacts,\n        clearContacts,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}