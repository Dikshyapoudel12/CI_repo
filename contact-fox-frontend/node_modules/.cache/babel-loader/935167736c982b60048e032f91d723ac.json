{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CI repo\\\\contact-fox-frontend\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from \"../types\";\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Function to load user. (Will check to see which user is logged in by hitting the auth endpoint to get the user data.)\n  const loadUser = async () => {\n    // Loads token into global headers.\n    setAuthToken(localStorage.token);\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n\n  // Function to register user. (Will sign the user up for the application and get a token for the user.)\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"/api/users\", formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Function to log in user. (Will log the user in for the application and get a token for the user.)\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Function to log out user. (Will destroy the user's token and clear any logged in user.)\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  // Function to clear errors. (Will clear out any errors in the state.)\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default AuthState;","map":{"version":3,"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","children"],"sources":["C:/Users/DELL/Desktop/CI repo/contact-fox-frontend/src/context/auth/AuthState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./authReducer\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Function to load user. (Will check to see which user is logged in by hitting the auth endpoint to get the user data.)\n  const loadUser = async () => {\n    // Loads token into global headers.\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Function to register user. (Will sign the user up for the application and get a token for the user.)\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/users\", formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Function to log in user. (Will log the user in for the application and get a token for the user.)\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Function to log out user. (Will destroy the user's token and clear any logged in user.)\n  const logout = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  // Function to clear errors. (Will clear out any errors in the state.)\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}